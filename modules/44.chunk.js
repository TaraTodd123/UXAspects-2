(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{"9LNQ":function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// access the chart directive properties</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token punctuation">:</span> BaseChartDirective<span class="token punctuation">;</span>\n\n    <span class="token comment">// configure the directive data</span>\n    lineChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    lineChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    lineChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    lineChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\n\n    livedata<span class="token punctuation">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">colorService<span class="token punctuation">:</span> ColorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineForecastFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.06</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> pointBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// set the initial chart data</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            elements<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                line<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    tension<span class="token punctuation">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    type<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    position<span class="token punctuation">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token punctuation">:</span> <span class="token number">299</span><span class="token punctuation">,</span>\n                        step<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment">/* Hide Labels on X Axis */</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        color<span class="token punctuation">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                        stepSize<span class="token punctuation">:</span> <span class="token number">25</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        color<span class="token punctuation">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                borderColor<span class="token punctuation">:</span> lineBorderColor<span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> lineFillColor<span class="token punctuation">,</span>\n                pointBackgroundColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n                pointBorderColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// update chart data every 40ms</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// instatiate new array to trigger change detection</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>Chart<span class="token punctuation">.</span>ChartDataSets<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            borderWidth<span class="token punctuation">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> number<span class="token punctuation">,</span> y<span class="token punctuation">:</span> number <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">let</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                x<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n                y<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    lineChartData: Chart.ChartDataSets[];\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    livedata: number[] = [];\n\n    constructor(colorService: ColorService) {\n\n        let gridColor = colorService.getColor('grey6').toHex();\n        let lineBorderColor = colorService.getColor('chart1').toRgb();\n        let lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let lineForecastFillColor = colorService.getColor('chart1').setAlpha(0.06).toRgba();\n        let pointBorderColor = colorService.getColor('chart1').setAlpha(0.5).toRgba();\n\n        // set the initial chart data\n        this.updateChartData();\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: false,\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    ticks: {\n                        min: 0,\n                        max: 299,\n                        step: 50,\n                        fontSize: 0 /* Hide Labels on X Axis */\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        stepSize: 25\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }]\n            },\n            tooltips: {\n                enabled: false\n            }\n        };\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor,\n                backgroundColor: lineFillColor,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent'\n            }\n        ];\n\n        setInterval(() => {\n            // update chart data every 40ms\n            this.updateChartData();\n        }, 40);\n    }\n\n    updateChartData() {\n\n        // instatiate new array to trigger change detection\n        this.lineChartData = new Array<Chart.ChartDataSets>();\n\n        this.lineChartData.push({\n            data: this.getRandomData(),\n            borderWidth: 1\n        });\n    }\n\n    getRandomData(): { x: number, y: number }[] {\n\n        if (this.livedata.length) {\n            this.livedata = this.livedata.slice(1);\n        }\n\n        while (this.livedata.length < 300) {\n            let previous = this.livedata.length ? this.livedata[this.livedata.length - 1] : 50;\n            let y = previous + Math.random() * 10 - 5;\n\n            this.livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n        let res = [];\n        for (let i = 0; i < this.livedata.length; ++i) {\n            res.push({\n                x: i,\n                y: this.livedata[i]\n            });\n        }\n\n        return res;\n    }\n\n}"}},AVdU:function(n,a,s){"use strict";s.d(a,"a",function(){return t});var t=function(){return function(n){var a=this;this.snippets={compiled:{},raw:{}},n.keys().forEach(function(s){var t=s.replace("./","").replace(/\W+(\w)/g,function(n){return n[1].toUpperCase()}),l=n(s);l.snippet&&(a.snippets.compiled[t]=l.snippet),l.example&&(a.snippets.raw[t]=l.example)})}}()},ZgaH:function(n,a,s){"use strict";s.r(a);var t=s("CcnG"),l=s("T/2f"),p=s("YZ8U"),e=s("mrSG"),o=s("AVdU"),u=s("yHOM"),c=function(n){function a(a){var t=n.call(this,s("s89H"))||this;t.playground={files:{"app.component.ts":t.snippets.raw.liveChartTs,"app.component.html":t.snippets.raw.liveChartHtml,"app.component.css":t.snippets.raw.liveChartCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.lineChartLegend=!1,t.livedata=[];var l=a.getColor("grey6").toHex(),p=a.getColor("chart1").toRgb(),e=a.getColor("chart1").setAlpha(.1).toRgba();return a.getColor("chart1").setAlpha(.06).toRgba(),a.getColor("chart1").setAlpha(.5).toRgba(),t.updateChartData(),t.lineChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{},elements:{line:{tension:0}},scales:{xAxes:[{type:"linear",position:"bottom",ticks:{min:0,max:299,step:50,fontSize:0},gridLines:{color:l}}],yAxes:[{ticks:{min:0,max:100,stepSize:25},gridLines:{color:l}}]},tooltips:{enabled:!1}},t.lineChartColors=[{borderColor:p,backgroundColor:e,pointBackgroundColor:"transparent",pointBorderColor:"transparent"}],setInterval(function(){t.updateChartData()},40),t}return Object(e.__extends)(a,n),a.prototype.updateChartData=function(){this.lineChartData=new Array,this.lineChartData.push({data:this.getRandomData(),borderWidth:1})},a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(n<0?0:n>100?100:n)}for(var a=[],s=0;s<this.livedata.length;++s)a.push({x:s,y:this.livedata[s]});return a},Object(e.__decorate)([Object(u.a)("ChartsLiveChartComponent")],a)}(o.a),i={category:p.b.resolveCategoryData(p.a.Charts,"Live Chart")},r=function(){return function(n,a){a.registerResolver(n)}}(),k=s("WmtN"),d=s("2lL+"),h=s("pMnS"),m=s("GBPT"),g=s("rYg0"),C=s("xdbM"),b=s("9hoY"),v=s("+gXg"),y=s("rpQh"),f=s("2RDK"),w=s("FcDf"),x=s("r1ng"),D=s("COk8"),R=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function S(n){return t["\u0275vid"](0,[t["\u0275qud"](402653184,1,{baseChart:0}),(n()(),t["\u0275eld"](1,0,null,null,5,"div",[["class","demo-chart-container"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](3,0,null,null,2,"canvas",[["baseChart",""],["chartType","line"]],null,null,null,null,null)),t["\u0275did"](4,737280,[[1,4]],0,C.BaseChartDirective,[t.ElementRef],{datasets:[0,"datasets"],options:[1,"options"],chartType:[2,"chartType"],colors:[3,"colors"],legend:[4,"legend"]},null),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](10,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Live Charts can be added using the "])),(n()(),t["\u0275eld"](12,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ng2-charts"])),(n()(),t["\u0275ted"](-1,null,[" library. \n    The "])),(n()(),t["\u0275eld"](15,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["chart.js"])),(n()(),t["\u0275ted"](-1,null,[" library needs to be imported and the "])),(n()(),t["\u0275eld"](18,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ChartsModule"])),(n()(),t["\u0275ted"](-1,null,[" needs to be added to the appropriate NgModule.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](22,0,null,null,0,"br",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](24,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](26,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["baseChart"])),(n()(),t["\u0275ted"](-1,null,[" directive should be added to a "])),(n()(),t["\u0275eld"](29,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["canvas"])),(n()(),t["\u0275ted"](-1,null,[" element and the following attributes can be used to customize the chart behavior and appearance:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](33,0,null,null,41,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,b.b,b.a)),t["\u0275did"](34,49152,null,0,v.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](36,0,null,0,38,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](37,0,null,null,2,"tr",[["name","dataSets"],["type","object[]"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](38,49152,null,0,f.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Contains the data and properties for each data set to be displayed in the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](41,0,null,null,20,"tr",[["name","chartType"],["type","string"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](42,49152,null,0,f.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Indicates the type of the chart. Possible options are: "])),(n()(),t["\u0275eld"](44,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["line"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](47,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["bar"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](50,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["radar"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](53,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["pie"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](56,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["polarArea"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](59,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["doughnut"])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](63,0,null,null,2,"tr",[["name","options"],["type","ChartOptions"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](64,49152,null,0,f.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Configures the appearance and behavior of all aspects of the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](67,0,null,null,2,"tr",[["name","colors"],["type","object[]"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](68,49152,null,0,f.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Configure the color values to be used within the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](71,0,null,null,2,"tr",[["name","legend"],["type","boolean"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](72,49152,null,0,f.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Determines whether or not the legend should be displayed.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](76,0,null,null,11,"uxd-api-properties",[["tableTitle","Outputs"]],null,null,null,b.b,b.a)),t["\u0275did"](77,49152,null,0,v.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](79,0,null,0,8,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](80,0,null,null,2,"tr",[["name","chartClick"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](81,49152,null,0,f.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](84,0,null,null,2,"tr",[["name","chartHover"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](85,49152,null,0,f.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](89,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Complete documentation on the directive and chart options can be found at the documentation links below."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](92,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following code can be used to create the example above: "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](95,0,null,null,25,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,d.sc,d.bb)),t["\u0275prd"](512,null,w.Ne,w.Ne,[]),t["\u0275did"](97,5423104,null,1,w.Le,[w.Ne],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,2,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](100,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,d.rc,d.ab)),t["\u0275did"](101,180224,[[2,4]],0,w.Ee,[w.Ne],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](103,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,x.b,x.a)),t["\u0275did"](104,114688,null,0,D.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](107,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,d.rc,d.ab)),t["\u0275did"](108,180224,[[2,4]],0,w.Ee,[w.Ne],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](110,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,x.b,x.a)),t["\u0275did"](111,114688,null,0,D.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](114,0,null,0,5,"ux-tab",[["heading","CSS"]],null,null,null,d.rc,d.ab)),t["\u0275did"](115,180224,[[2,4]],0,w.Ee,[w.Ne],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](117,0,null,0,1,"uxd-snippet",[["language","css"]],null,null,null,x.b,x.a)),t["\u0275did"](118,114688,null,0,D.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](122,0,null,null,0,"br",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](124,0,null,null,48,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](126,0,null,null,12,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](128,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Dependencies: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](131,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/ng2-charts"]],null,null,null,null,null)),t["\u0275did"](132,212992,null,0,w.gb,[t.ElementRef,w.cc,w.c,t.NgZone,[2,w.Dc]],null,null),(n()(),t["\u0275ted"](-1,null,["ng2-charts"])),(n()(),t["\u0275ted"](-1,null,[", \n        "])),(n()(),t["\u0275eld"](135,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/chart.js"]],null,null,null,null,null)),t["\u0275did"](136,212992,null,0,w.gb,[t.ElementRef,w.cc,w.c,t.NgZone,[2,w.Dc]],null,null),(n()(),t["\u0275ted"](-1,null,["chart.js"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](140,0,null,null,8,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](142,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Type Definitions: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](145,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js"]],null,null,null,null,null)),t["\u0275did"](146,212992,null,0,w.gb,[t.ElementRef,w.cc,w.c,t.NgZone,[2,w.Dc]],null,null),(n()(),t["\u0275ted"](-1,null,["@types/chart.js"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](150,0,null,null,7,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](152,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Modules: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](155,0,null,null,1,"span",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ChartsModule"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n\n    "])),(n()(),t["\u0275eld"](159,0,null,null,12,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](161,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Documentation: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](164,0,null,null,2,"a",[["class","hyperlink"],["href","http://valor-software.com/ng2-charts/"]],null,null,null,null,null)),t["\u0275did"](165,212992,null,0,w.gb,[t.ElementRef,w.cc,w.c,t.NgZone,[2,w.Dc]],null,null),(n()(),t["\u0275ted"](-1,null,["Angular Directive Documentation"])),(n()(),t["\u0275ted"](-1,null,[", \n        "])),(n()(),t["\u0275eld"](168,0,null,null,2,"a",[["class","hyperlink"],["href","http://www.chartjs.org/docs/"]],null,null,null,null,null)),t["\u0275did"](169,212992,null,0,w.gb,[t.ElementRef,w.cc,w.c,t.NgZone,[2,w.Dc]],null,null),(n()(),t["\u0275ted"](-1,null,["Chart Library Documentation"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,4,0,s.lineChartData,s.lineChartOptions,"line",s.lineChartColors,s.lineChartLegend),n(a,34,0,"Inputs"),n(a,38,0,"dataSets","object[]"),n(a,42,0,"chartType","string"),n(a,64,0,"options","ChartOptions"),n(a,68,0,"colors","object[]"),n(a,72,0,"legend","boolean"),n(a,77,0,"Outputs"),n(a,81,0,"chartClick"),n(a,85,0,"chartHover"),n(a,97,0,!1),n(a,101,0,"HTML"),n(a,104,0,"html",s.snippets.compiled.liveChartHtml),n(a,108,0,"TypeScript"),n(a,111,0,"javascript",s.snippets.compiled.liveChartTs),n(a,115,0,"CSS"),n(a,118,0,"css",s.snippets.compiled.liveChartCss),n(a,132,0),n(a,136,0),n(a,146,0),n(a,165,0),n(a,169,0)},function(n,a){n(a,95,0,"left"===t["\u0275nov"](a,97).stacked,"right"===t["\u0275nov"](a,97).stacked)})}function L(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-charts-live-chart",[],null,null,null,S,R)),t["\u0275did"](1,49152,null,0,c,[w.F],null,null)],null,null)}var T=t["\u0275ccf"]("uxd-charts-live-chart",c,L,{},{},[]),A=s("Ip0R"),O=s("M2Lx"),M=s("lLAP"),F=s("gIcY"),N=s("eDkP"),B=s("Fzqc"),j=s("dWZg"),E=s("qina"),H=s("zCE2"),z=s("4c35"),U=s("qAlS"),_=s("ZYCi"),I=s("FLOw"),Z=s("XtaT");s.d(a,"ChartsLiveChartsModuleNgFactory",function(){return G});var G=t["\u0275cmf"](r,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[k.a,d.rb,d.a,h.a,m.a,g.a,T]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,A.NgLocalization,A.NgLocaleLocalization,[t.LOCALE_ID,[2,A["\u0275angular_packages_common_common_a"]]]),t["\u0275mpd"](4608,O.c,O.c,[]),t["\u0275mpd"](4608,w.c,w.c,[[2,w.a]]),t["\u0275mpd"](4608,w.Q,w.Q,[]),t["\u0275mpd"](4608,w.cc,w.cc,[M.d,w.c,w.bc,[2,w.a],t.RendererFactory2]),t["\u0275mpd"](4608,w.Ec,w.Ec,[t.RendererFactory2]),t["\u0275mpd"](4608,F.B,F.B,[]),t["\u0275mpd"](4608,N.a,N.a,[N.f,N.b,t.ComponentFactoryResolver,N.e,N.c,t.Injector,t.NgZone,A.DOCUMENT,B.b]),t["\u0275mpd"](5120,N.g,N.h,[N.a]),t["\u0275mpd"](4608,w.ff,w.ff,[]),t["\u0275mpd"](4608,w.ud,w.ud,[]),t["\u0275mpd"](1073742336,C.ChartsModule,C.ChartsModule,[]),t["\u0275mpd"](1073742336,w.G,w.G,[]),t["\u0275mpd"](1073742336,A.CommonModule,A.CommonModule,[]),t["\u0275mpd"](1073742336,j.b,j.b,[]),t["\u0275mpd"](1073742336,O.d,O.d,[]),t["\u0275mpd"](1073742336,M.a,M.a,[]),t["\u0275mpd"](1073742336,w.b,w.b,[]),t["\u0275mpd"](1073742336,E.a,E.a,[]),t["\u0275mpd"](1073742336,H.a,H.a,[]),t["\u0275mpd"](1073742336,w.pb,w.pb,[]),t["\u0275mpd"](1073742336,F.y,F.y,[]),t["\u0275mpd"](1073742336,F.l,F.l,[]),t["\u0275mpd"](1073742336,B.a,B.a,[]),t["\u0275mpd"](1073742336,z.c,z.c,[]),t["\u0275mpd"](1073742336,U.a,U.a,[]),t["\u0275mpd"](1073742336,N.d,N.d,[]),t["\u0275mpd"](1073742336,w.z,w.z,[]),t["\u0275mpd"](1073742336,w.ef,w.ef,[]),t["\u0275mpd"](1073742336,w.xd,w.xd,[]),t["\u0275mpd"](1073742336,_.p,_.p,[[2,_.v],[2,_.m]]),t["\u0275mpd"](1073742336,w.Sd,w.Sd,[]),t["\u0275mpd"](1073742336,I.a,I.a,[]),t["\u0275mpd"](1073742336,w.td,w.td,[]),t["\u0275mpd"](1073742336,Z.a,Z.a,[]),t["\u0275mpd"](1073742336,w.Me,w.Me,[]),t["\u0275mpd"](1073742336,r,r,[t.ComponentFactoryResolver,p.b]),t["\u0275mpd"](1024,_.k,function(){return[[{path:"**",component:l.a,data:i}]]},[])])})},"fRG/":function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},"lR+T":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartLegend<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>'}},s89H:function(n,a,s){var t={"./live-chart.css":"fRG/","./live-chart.html":"lR+T","./live-chart.ts":"9LNQ"};function l(n){var a=p(n);return s(a)}function p(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}l.keys=function(){return Object.keys(t)},l.resolve=p,n.exports=l,l.id="s89H"}}]);